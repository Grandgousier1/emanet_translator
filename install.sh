#!/bin/bash

# Script d'installation pour Emanet Subtitle Translator sur Fedora 41
# Ex√©cuter avec : bash install.sh (sans sudo!)

set -e

echo "=== Installation d'Emanet Subtitle Translator ==="
echo ""

# V√©rifier qu'on n'est PAS root
if [ "$EUID" -eq 0 ]; then 
   echo "‚ö†Ô∏è  Ne lancez pas ce script avec sudo !"
   echo "Utilisez simplement : bash install.sh"
   exit 1
fi

# Couleurs pour l'affichage
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Fonction pour afficher les succ√®s
success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

# Fonction pour afficher les erreurs
error() {
    echo -e "${RED}‚úó $1${NC}"
    exit 1
}

# V√©rifier qu'on est sur Fedora
if ! command -v dnf &> /dev/null; then
    error "Ce script est con√ßu pour Fedora. DNF n'est pas disponible."
fi

echo "1. Installation des d√©pendances syst√®me..."
echo ""

# Installer les d√©pendances syst√®me
echo "Installation des paquets manquants..."
PACKAGES=(
    "python3"
    "python3-pip"
    "python3-tkinter"
    "ffmpeg"
    "ffmpeg-free-libs"
    "vlc"
    "git"
    "gcc"
    "gcc-c++"
    "python3-devel"
)

for package in "${PACKAGES[@]}"; do
    if ! rpm -q "$package" &> /dev/null; then
        echo "Installation de $package..."
        sudo dnf install -y "$package" || {
            # Si le paquet n'existe pas, essayer des alternatives
            if [ "$package" = "ffmpeg-free-libs" ]; then
                echo "Tentative avec ffmpeg-libs..."
                sudo dnf install -y ffmpeg-libs 2>/dev/null || echo "Paquet ffmpeg-libs non trouv√©, ignor√©"
            else
                error "Impossible d'installer $package"
            fi
        }
    else
        echo "‚úì $package d√©j√† install√©"
    fi
done

success "D√©pendances syst√®me install√©es"

echo ""
echo "2. Mise √† jour de pip..."
python3 -m pip install --upgrade pip --user || error "√âchec de la mise √† jour de pip"
success "Pip mis √† jour"

echo ""
echo "3. Installation des d√©pendances Python..."
echo "Cela peut prendre plusieurs minutes pour t√©l√©charger les mod√®les..."
echo ""

# Cr√©er un environnement virtuel (recommand√©)
echo "Cr√©ation de l'environnement virtuel..."
python3 -m venv venv || error "√âchec de la cr√©ation de l'environnement virtuel"
success "Environnement virtuel cr√©√©"

# Activer l'environnement virtuel
source venv/bin/activate || error "√âchec de l'activation de l'environnement virtuel"
success "Environnement virtuel activ√©"

# Installer les d√©pendances Python
pip install -r requirements.txt || error "√âchec de l'installation des d√©pendances Python"
success "D√©pendances Python install√©es"

echo ""
echo "4. T√©l√©chargement du mod√®le Whisper de base..."
echo "Le mod√®le sera t√©l√©charg√© lors de la premi√®re utilisation"
echo ""

# Cr√©er les dossiers n√©cessaires
mkdir -p emanet_subtitles
mkdir -p temp
success "Dossiers cr√©√©s"

# Cr√©er un script de lancement
cat > launch_emanet.sh << 'EOF'
#!/bin/bash
# Script de lancement pour Emanet Subtitle Translator

# Activer l'environnement virtuel
source venv/bin/activate

# Acc√©l√©rer les t√©l√©chargements Hugging Face
export HF_HUB_ENABLE_HF_TRANSFER=1

# Lancer l'application
python3 emanet_translator.py
EOF

chmod +x launch_emanet.sh
success "Script de lancement cr√©√©"

# Cr√©er un fichier desktop pour le menu d'applications
cat > emanet-translator.desktop << EOF
[Desktop Entry]
Name=Emanet Subtitle Translator
Comment=Traduit les sous-titres de la s√©rie Emanet
Exec=$(pwd)/launch_emanet.sh
Icon=$(pwd)/icon.png
Terminal=false
Type=Application
Categories=AudioVideo;Video;
EOF

# Installer le fichier desktop
if [ -d "$HOME/.local/share/applications" ]; then
    cp emanet-translator.desktop "$HOME/.local/share/applications/"
    success "Raccourci ajout√© au menu d'applications"
fi

echo ""
echo "=== Installation termin√©e avec succ√®s ! ==="
echo ""
echo "Pour lancer l'application :"
echo "  1. Depuis le terminal : ./launch_emanet.sh"
echo "  2. Depuis le menu d'applications : cherchez 'Emanet'"
echo ""
echo "Notes importantes :"
echo "- Le premier lancement t√©l√©chargera les mod√®les IA :"
echo "  ‚Ä¢ Mod√®le Whisper : ~140 MB √† 1 GB selon la taille"
echo "  ‚Ä¢ Mod√®le NLLB : ~600 MB √† 3.3 GB selon la taille"
echo "- Assurez-vous d'avoir une connexion Internet active"
echo "- Les sous-titres seront sauvegard√©s dans : emanet_subtitles/"
echo ""
echo "Configuration recommand√©e :"
echo "- Pour de meilleurs r√©sultats, utilisez Whisper 'base' + NLLB 'medium'"
echo "- Si vous avez un GPU NVIDIA, les traductions seront beaucoup plus rapides"
echo ""

# Test de VLC
if command -v vlc &> /dev/null; then
    success "VLC est install√© et pr√™t"
else
    error "VLC n'est pas correctement install√©"
fi

# Test GPU NVIDIA
if command -v nvidia-smi &> /dev/null; then
    echo ""
    success "GPU NVIDIA d√©tect√© ! Les traductions seront acc√©l√©r√©es."
    echo "Pour activer CUDA, installez : pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118"
fi

echo ""
echo "Bon visionnage √† votre grand-m√®re ! üé¨"
